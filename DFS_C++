class Solution {
    void dfs(  int vis[],int node, vector<int>&ans, vector<int>adj[])
    {
        vis[node]=1;
        ans.push_back(node);
        for(auto it:adj[node])
        {
            if(!vis[it])
            {
               dfs(vis,it,ans,adj); 
            }
        }
    }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[])
    {
      int vis[V]={0};
       int start=0;
       vector<int>ans;
       dfs(vis,start,ans,adj);
       return ans;
    }
};
